name: CI
on: push
jobs:
  Setup:
    runs-on: ubuntu-20.04
    steps:
      - name: Setup php 8.1
        uses: shivammathur/setup-php@v2
        with:
            php-version: '8.1'
      - name: Check php version
        run: php --version
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Copy .env
        run: '[ ! -e ".env" ] && cp .env.example .env'
      - name: Install Composer Dependencies
        run: composer install -q --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install NPM Dependencies
        run: npm install --silent
      - name: Build FE
        run: npm run production
      - name: Generate key
        run: php artisan key:generate
      - name: Cache setup result
        uses: actions/cache@v2
        id: setup-result
        with:
          path: ./*
          key: ${{ github.sha }}

  PHPCS:
    needs: Setup
    runs-on: ubuntu-20.04
    steps:
      - name: Setup php 8.1
        uses: shivammathur/setup-php@v2
        with:
            php-version: '8.1'
      - name: Get setup result from cache
        uses: actions/cache@v2
        id: setup-result
        with:
            path: ./*
            key: ${{ github.sha }}
      - name: PHPCS
        run: php vendor/bin/phpcs

  PHPStan:
    needs: Setup
    runs-on: ubuntu-20.04
    steps:
      - name: Setup php 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - name: Get setup result from cache
        uses: actions/cache@v2
        id: setup-result
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: PHPStan
        run: php vendor/bin/phpstan analyse --memory-limit=2G

  Pest:
    needs: Setup
    runs-on: ubuntu-20.04
    steps:
      - name: Setup php 8.1
        uses: shivammathur/setup-php@v2
        with:
            php-version: '8.1'
      - name: Get setup result from cache
        uses: actions/cache@v2
        id: setup-result
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Pest
        run: php artisan test --parallel
